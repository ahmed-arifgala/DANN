{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":8816859,"sourceType":"datasetVersion","datasetId":5303909}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import torch.utils.data as data\nfrom PIL import Image\nimport os\nimport torch.backends.cudnn as cudnn\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-30T11:56:01.743190Z","iopub.execute_input":"2024-06-30T11:56:01.744080Z","iopub.status.idle":"2024-06-30T11:56:01.748456Z","shell.execute_reply.started":"2024-06-30T11:56:01.744046Z","shell.execute_reply":"2024-06-30T11:56:01.747423Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"# Check if CUDA (GPU support) is available\nimport torch\ncuda = torch.cuda.is_available()\n\n# Print whether CUDA is available\nprint('CUDA available:', cuda)\n\ndevice = torch.device('cuda' if cuda else 'cpu')\nprint(\"device: \", device)\n\nif cuda:\n    cudnn.benchmark = True","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:02.120421Z","iopub.execute_input":"2024-06-30T11:56:02.120774Z","iopub.status.idle":"2024-06-30T11:56:02.151274Z","shell.execute_reply.started":"2024-06-30T11:56:02.120740Z","shell.execute_reply":"2024-06-30T11:56:02.150350Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"CUDA available: True\ndevice:  cuda\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Data Loader","metadata":{}},{"cell_type":"code","source":"class GetLoader(data.Dataset):\n    def __init__(self, data_root, data_list, transform=None):\n        self.root = data_root\n        self.transform = transform\n\n        f = open(data_list, 'r')\n        data_list = f.readlines()\n        f.close()\n\n        self.n_data = len(data_list)\n\n        self.img_paths = []\n        self.img_labels = []\n\n        for data in data_list:\n            self.img_paths.append(data[:-3])\n            self.img_labels.append(data[-2])\n            \n\n    def __getitem__(self, item):\n        img_paths, labels = self.img_paths[item], self.img_labels[item]\n        imgs = Image.open(os.path.join(self.root, img_paths)).convert('RGB')\n\n        if self.transform is not None:\n            imgs = self.transform(imgs)\n            labels = int(labels)\n\n        return imgs, labels\n\n    def __len__(self):\n        return self.n_data","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:03.711124Z","iopub.execute_input":"2024-06-30T11:56:03.712053Z","iopub.status.idle":"2024-06-30T11:56:03.722440Z","shell.execute_reply.started":"2024-06-30T11:56:03.712013Z","shell.execute_reply":"2024-06-30T11:56:03.721461Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":"## Functions","metadata":{}},{"cell_type":"code","source":"from torch.autograd import Function","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:04.365001Z","iopub.execute_input":"2024-06-30T11:56:04.365427Z","iopub.status.idle":"2024-06-30T11:56:04.369836Z","shell.execute_reply.started":"2024-06-30T11:56:04.365398Z","shell.execute_reply":"2024-06-30T11:56:04.368812Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"class ReverseLayerF(Function):\n\n    @staticmethod\n    def forward(ctx, x, alpha):\n        ctx.alpha = alpha\n\n        return x.view_as(x)\n\n    @staticmethod\n    def backward(ctx, grad_output):\n        output = grad_output.neg() * ctx.alpha\n\n        return output, None","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:04.669871Z","iopub.execute_input":"2024-06-30T11:56:04.670236Z","iopub.status.idle":"2024-06-30T11:56:04.675734Z","shell.execute_reply.started":"2024-06-30T11:56:04.670191Z","shell.execute_reply":"2024-06-30T11:56:04.674792Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"markdown","source":"## Model","metadata":{}},{"cell_type":"code","source":"import torch.nn as nn","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:05.308946Z","iopub.execute_input":"2024-06-30T11:56:05.309315Z","iopub.status.idle":"2024-06-30T11:56:05.315543Z","shell.execute_reply.started":"2024-06-30T11:56:05.309283Z","shell.execute_reply":"2024-06-30T11:56:05.314618Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"class CNNModel(nn.Module):\n\n    def __init__(self):\n        super(CNNModel, self).__init__()\n        self.feature = nn.Sequential()\n        self.feature.add_module('f_conv1', nn.Conv2d(3, 64, kernel_size=5))\n        self.feature.add_module('f_bn1', nn.BatchNorm2d(64))\n        self.feature.add_module('f_pool1', nn.MaxPool2d(2))\n        self.feature.add_module('f_relu1', nn.ReLU(True))\n        self.feature.add_module('f_conv2', nn.Conv2d(64, 50, kernel_size=5))\n        self.feature.add_module('f_bn2', nn.BatchNorm2d(50))\n        self.feature.add_module('f_drop1', nn.Dropout())\n        self.feature.add_module('f_pool2', nn.MaxPool2d(2))\n        self.feature.add_module('f_relu2', nn.ReLU(True))\n\n        self.class_classifier = nn.Sequential()\n        self.class_classifier.add_module('c_fc1', nn.Linear(50 * 4 * 4, 100))\n        self.class_classifier.add_module('c_bn1', nn.BatchNorm1d(100))\n        self.class_classifier.add_module('c_relu1', nn.ReLU(True))\n        self.class_classifier.add_module('c_drop1', nn.Dropout())\n        self.class_classifier.add_module('c_fc2', nn.Linear(100, 100))\n        self.class_classifier.add_module('c_bn2', nn.BatchNorm1d(100))\n        self.class_classifier.add_module('c_relu2', nn.ReLU(True))\n        self.class_classifier.add_module('c_fc3', nn.Linear(100, 10))\n        self.class_classifier.add_module('c_softmax', nn.LogSoftmax())\n\n        self.domain_classifier = nn.Sequential()\n        self.domain_classifier.add_module('d_fc1', nn.Linear(50 * 4 * 4, 100))\n        self.domain_classifier.add_module('d_bn1', nn.BatchNorm1d(100))\n        self.domain_classifier.add_module('d_relu1', nn.ReLU(True))\n        self.domain_classifier.add_module('d_fc2', nn.Linear(100, 2))\n        self.domain_classifier.add_module('d_softmax', nn.LogSoftmax(dim=1))\n\n    def forward(self, input_data, alpha):\n        input_data = input_data.expand(input_data.data.shape[0], 3, 28, 28)\n        feature = self.feature(input_data)\n        feature = feature.view(-1, 50 * 4 * 4)\n        reverse_feature = ReverseLayerF.apply(feature, alpha)\n        class_output = self.class_classifier(feature)\n        domain_output = self.domain_classifier(reverse_feature)\n\n        return class_output, domain_output","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:05.630661Z","iopub.execute_input":"2024-06-30T11:56:05.631392Z","iopub.status.idle":"2024-06-30T11:56:05.646031Z","shell.execute_reply.started":"2024-06-30T11:56:05.631356Z","shell.execute_reply":"2024-06-30T11:56:05.645027Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":"# Train","metadata":{}},{"cell_type":"code","source":"import os\nimport torch.backends.cudnn as cudnn\nimport torch.utils.data\nfrom torchvision import transforms\nfrom torchvision import datasets","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:06.254815Z","iopub.execute_input":"2024-06-30T11:56:06.255187Z","iopub.status.idle":"2024-06-30T11:56:07.805444Z","shell.execute_reply.started":"2024-06-30T11:56:06.255155Z","shell.execute_reply":"2024-06-30T11:56:07.804642Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"code","source":"\ndef test(dataset_name, epoch):\n    assert dataset_name in ['MNIST', 'mnist_m']\n\n    model_root = os.path.join('/kaggle/working', 'models')\n\n    if dataset_name == 'mnist_m':\n        image_root = os.path.join('/kaggle/input/mninst-m-dataset', 'dataset', dataset_name)\n\n\n    cudnn.benchmark = True\n    batch_size = 128\n    image_size = 28\n    alpha = 0\n\n    \"\"\"load data\"\"\"\n\n    img_transform_source = transforms.Compose([\n        transforms.Resize(image_size),\n        transforms.ToTensor(),\n        transforms.Normalize(mean=(0.1307,), std=(0.3081,))\n    ])\n\n    img_transform_target = transforms.Compose([\n        transforms.Resize(image_size),\n        transforms.ToTensor(),\n        transforms.Normalize(mean=(0.5, 0.5, 0.5), std=(0.5, 0.5, 0.5))\n    ])\n\n    if dataset_name == 'mnist_m':\n        test_list = os.path.join(image_root, 'mnist_m_test_labels.txt')\n\n        dataset = GetLoader(\n            data_root=os.path.join(image_root, 'mnist_m_test'),\n            data_list=test_list,\n            transform=img_transform_target\n        )\n    else:\n        dataset = datasets.MNIST(\n            root='/kaggle/working/dataset_test',\n            train=False,\n            transform=img_transform_source,\n            download=True  # Download dataset if not present\n\n        )\n\n    dataloader = torch.utils.data.DataLoader(\n        dataset=dataset,\n        batch_size=batch_size,\n        shuffle=False,\n        num_workers=8\n    )\n\n    \"\"\" training \"\"\"\n\n    my_net = torch.load(os.path.join(\n        model_root, 'mnist_mnistm_model_epoch_' + str(epoch) + '.pth'\n    ))\n    my_net = my_net.eval()\n\n    if cuda:\n        my_net = my_net.cuda()\n\n    len_dataloader = len(dataloader)\n    data_target_iter = iter(dataloader)\n\n    i = 0\n    n_total = 0\n    n_correct = 0\n    total_loss = 0  # Initialize total loss\n\n\n    while i < len_dataloader:\n\n        # test model using target data\n        data_target = next(data_target_iter)\n        t_img, t_label = data_target\n\n        batch_size = len(t_label)\n\n        input_img = torch.FloatTensor(batch_size, 3, image_size, image_size)\n        class_label = torch.LongTensor(batch_size)\n\n        if cuda:\n            t_img = t_img.cuda()\n            t_label = t_label.cuda()\n            input_img = input_img.cuda()\n            class_label = class_label.cuda()\n\n        input_img.resize_as_(t_img).copy_(t_img)\n        class_label.resize_as_(t_label).copy_(t_label)\n\n        ##run model\n        class_output, _ = my_net(input_data=input_img, alpha=alpha)\n        \n        ##calc loss\n        err_test_label = loss_class(class_output, class_label)\n        \n        total_loss += err_test_label.item()  # Accumulate the loss\n\n        \n        ##calc acc\n        pred = class_output.data.max(1, keepdim=True)[1]\n        n_correct += pred.eq(class_label.data.view_as(pred)).cpu().sum().item()\n        n_total += batch_size\n\n        i += 1\n        \n    avg_loss = total_loss / len_dataloader  # Compute average loss\n    accu = n_correct / n_total\n\n#     print('epoch: %d, accuracy of the %s dataset: %f' % (epoch, dataset_name, accu))\n    \n    return avg_loss, accu","metadata":{"execution":{"iopub.status.busy":"2024-06-30T12:29:34.610164Z","iopub.execute_input":"2024-06-30T12:29:34.610524Z","iopub.status.idle":"2024-06-30T12:29:34.628177Z","shell.execute_reply.started":"2024-06-30T12:29:34.610498Z","shell.execute_reply":"2024-06-30T12:29:34.627111Z"},"trusted":true},"execution_count":33,"outputs":[]},{"cell_type":"markdown","source":"## Main","metadata":{}},{"cell_type":"code","source":"import random\nimport torch.optim as optim\nimport numpy as np\n","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:07.824514Z","iopub.execute_input":"2024-06-30T11:56:07.824798Z","iopub.status.idle":"2024-06-30T11:56:07.836940Z","shell.execute_reply.started":"2024-06-30T11:56:07.824770Z","shell.execute_reply":"2024-06-30T11:56:07.836171Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"code","source":"source_dataset_name = 'MNIST'\ntarget_dataset_name = 'mnist_m'\nsource_image_root = os.path.join('..', 'dataset', source_dataset_name)\ntarget_image_root = os.path.join('/kaggle/input/mninst-m-dataset', 'dataset', target_dataset_name)\nmodel_root = os.path.join('/kaggle/working', 'models')\ncuda = True\ncudnn.benchmark = True\nlr = 1e-3\nbatch_size = 128\nimage_size = 28\nn_epoch = 100\n\nmanual_seed = random.randint(1, 10000)\nrandom.seed(manual_seed)\ntorch.manual_seed(manual_seed)","metadata":{"execution":{"iopub.status.busy":"2024-06-30T12:37:14.150005Z","iopub.execute_input":"2024-06-30T12:37:14.150687Z","iopub.status.idle":"2024-06-30T12:37:14.159381Z","shell.execute_reply.started":"2024-06-30T12:37:14.150656Z","shell.execute_reply":"2024-06-30T12:37:14.158469Z"},"trusted":true},"execution_count":36,"outputs":[{"execution_count":36,"output_type":"execute_result","data":{"text/plain":"<torch._C.Generator at 0x7d55403df330>"},"metadata":{}}]},{"cell_type":"code","source":"print(os.listdir(target_image_root))","metadata":{"execution":{"iopub.status.busy":"2024-06-30T12:37:24.844256Z","iopub.execute_input":"2024-06-30T12:37:24.845121Z","iopub.status.idle":"2024-06-30T12:37:24.851997Z","shell.execute_reply.started":"2024-06-30T12:37:24.845087Z","shell.execute_reply":"2024-06-30T12:37:24.851060Z"},"trusted":true},"execution_count":37,"outputs":[{"name":"stdout","text":"['mnist_m_test_labels.txt', 'mnist_m_train', 'mnist_m_test', 'mnist_m_train_labels.txt']\n","output_type":"stream"}]},{"cell_type":"markdown","source":"#### Load data\n","metadata":{}},{"cell_type":"code","source":"img_transform_source = transforms.Compose([\n    transforms.Resize(image_size),\n    transforms.ToTensor(),\n    transforms.Normalize(mean=(0.1307,), std=(0.3081,))\n])\n\nimg_transform_target = transforms.Compose([\n    transforms.Resize(image_size),\n    transforms.ToTensor(),\n    transforms.Normalize(mean=(0.5, 0.5, 0.5), std=(0.5, 0.5, 0.5))\n])","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:09.387930Z","iopub.execute_input":"2024-06-30T11:56:09.388601Z","iopub.status.idle":"2024-06-30T11:56:09.394054Z","shell.execute_reply.started":"2024-06-30T11:56:09.388566Z","shell.execute_reply":"2024-06-30T11:56:09.393141Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"dataset_source = datasets.MNIST(\n    root='/kaggle/working/dataset_train',\n    train=True,\n    transform=img_transform_source,\n    download=True\n)\n\ndataloader_source = torch.utils.data.DataLoader(\n    dataset=dataset_source,\n    batch_size=batch_size,\n    shuffle=True,\n    num_workers=8)","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:17.744570Z","iopub.execute_input":"2024-06-30T11:56:17.744926Z","iopub.status.idle":"2024-06-30T11:56:17.819478Z","shell.execute_reply.started":"2024-06-30T11:56:17.744896Z","shell.execute_reply":"2024-06-30T11:56:17.818492Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"code","source":"dataset_source","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:19.041493Z","iopub.execute_input":"2024-06-30T11:56:19.041862Z","iopub.status.idle":"2024-06-30T11:56:19.047638Z","shell.execute_reply.started":"2024-06-30T11:56:19.041833Z","shell.execute_reply":"2024-06-30T11:56:19.046763Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"Dataset MNIST\n    Number of datapoints: 60000\n    Root location: /kaggle/working/dataset_train\n    Split: Train\n    StandardTransform\nTransform: Compose(\n               Resize(size=28, interpolation=bilinear, max_size=None, antialias=warn)\n               ToTensor()\n               Normalize(mean=(0.1307,), std=(0.3081,))\n           )"},"metadata":{}}]},{"cell_type":"code","source":"input_dir = '/kaggle/input/mnist'\nprint(os.listdir(target_image_root))","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:19.401803Z","iopub.execute_input":"2024-06-30T11:56:19.402698Z","iopub.status.idle":"2024-06-30T11:56:19.408168Z","shell.execute_reply.started":"2024-06-30T11:56:19.402660Z","shell.execute_reply":"2024-06-30T11:56:19.407183Z"},"trusted":true},"execution_count":22,"outputs":[{"name":"stdout","text":"['mnist_m_test_labels.txt', 'mnist_m_train', 'mnist_m_test', 'mnist_m_train_labels.txt']\n","output_type":"stream"}]},{"cell_type":"code","source":"train_list = os.path.join(target_image_root, 'mnist_m_train_labels.txt')","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:20.398694Z","iopub.execute_input":"2024-06-30T11:56:20.399053Z","iopub.status.idle":"2024-06-30T11:56:20.403371Z","shell.execute_reply.started":"2024-06-30T11:56:20.399023Z","shell.execute_reply":"2024-06-30T11:56:20.402464Z"},"trusted":true},"execution_count":23,"outputs":[]},{"cell_type":"code","source":"dataset_target = GetLoader(\n    data_root=os.path.join(target_image_root, 'mnist_m_train'),\n    data_list=train_list,\n    transform=img_transform_target\n)\n\ndataloader_target = torch.utils.data.DataLoader(\n    dataset=dataset_target,\n    batch_size=batch_size,\n    shuffle=True,\n    num_workers=8)","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:22.802844Z","iopub.execute_input":"2024-06-30T11:56:22.803186Z","iopub.status.idle":"2024-06-30T11:56:22.858732Z","shell.execute_reply.started":"2024-06-30T11:56:22.803159Z","shell.execute_reply":"2024-06-30T11:56:22.857950Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"markdown","source":"### Load Model","metadata":{}},{"cell_type":"code","source":"my_net = CNNModel()","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:24.334683Z","iopub.execute_input":"2024-06-30T11:56:24.335051Z","iopub.status.idle":"2024-06-30T11:56:24.369854Z","shell.execute_reply.started":"2024-06-30T11:56:24.335021Z","shell.execute_reply":"2024-06-30T11:56:24.368930Z"},"trusted":true},"execution_count":25,"outputs":[]},{"cell_type":"code","source":"# setup optimizer\n\noptimizer = optim.Adam(my_net.parameters(), lr=lr)\n\nloss_class = torch.nn.NLLLoss()\nloss_domain = torch.nn.NLLLoss()","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:24.729896Z","iopub.execute_input":"2024-06-30T11:56:24.730272Z","iopub.status.idle":"2024-06-30T11:56:24.736856Z","shell.execute_reply.started":"2024-06-30T11:56:24.730237Z","shell.execute_reply":"2024-06-30T11:56:24.735749Z"},"trusted":true},"execution_count":26,"outputs":[]},{"cell_type":"code","source":"if cuda:\n    my_net = my_net.cuda()\n    loss_class = loss_class.cuda()\n    loss_domain = loss_domain.cuda()\n\nfor p in my_net.parameters():\n    p.requires_grad = True","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:25.194338Z","iopub.execute_input":"2024-06-30T11:56:25.195096Z","iopub.status.idle":"2024-06-30T11:56:25.342904Z","shell.execute_reply.started":"2024-06-30T11:56:25.195055Z","shell.execute_reply":"2024-06-30T11:56:25.342147Z"},"trusted":true},"execution_count":27,"outputs":[]},{"cell_type":"code","source":"if not os.path.exists(model_root):\n    os.makedirs(model_root)","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:56:25.811328Z","iopub.execute_input":"2024-06-30T11:56:25.812050Z","iopub.status.idle":"2024-06-30T11:56:25.816236Z","shell.execute_reply.started":"2024-06-30T11:56:25.812021Z","shell.execute_reply":"2024-06-30T11:56:25.815264Z"},"trusted":true},"execution_count":28,"outputs":[]},{"cell_type":"code","source":"# training\n\n# Initialize lists to store metrics\ntrain_losses_s_label = []\ntrain_losses_s_domain = []\ntrain_losses_t_domain = []\ntrain_accs = []\ntest_losses_source = []\ntest_accs_source = []\ntest_losses_target = []\ntest_accs_target = []\n\nprint('TRAINING STARTED...')\n\nfor epoch in range(n_epoch):\n\n    len_dataloader = min(len(dataloader_source), len(dataloader_target))\n    data_source_iter = iter(dataloader_source)\n    data_target_iter = iter(dataloader_target)\n\n    # Initialize accumulators for the losses\n    total_err_s_label = 0\n    total_err_s_domain = 0\n    total_err_t_domain = 0\n    total_correct = 0\n    total_samples = 0\n    \n    i = 0\n    while i < len_dataloader:\n\n        p = float(i + epoch * len_dataloader) / n_epoch / len_dataloader\n        alpha = 2. / (1. + np.exp(-10 * p)) - 1\n\n        # training model using source data\n        data_source = next(data_source_iter)\n        s_img, s_label = data_source\n\n        my_net.zero_grad()\n        batch_size = len(s_label)\n\n        input_img = torch.FloatTensor(batch_size, 3, image_size, image_size)\n        class_label = torch.LongTensor(batch_size)\n        domain_label = torch.zeros(batch_size)\n        domain_label = domain_label.long()\n\n        if cuda:\n            s_img = s_img.cuda()\n            s_label = s_label.cuda()\n            input_img = input_img.cuda()\n            class_label = class_label.cuda()\n            domain_label = domain_label.cuda()\n\n        input_img.resize_as_(s_img).copy_(s_img)\n        class_label.resize_as_(s_label).copy_(s_label)\n\n        class_output, domain_output = my_net(input_data=input_img, alpha=alpha)\n        err_s_label = loss_class(class_output, class_label)\n        err_s_domain = loss_domain(domain_output, domain_label)\n\n        # training model using target data\n        data_target = next(data_target_iter)\n        t_img, _ = data_target\n\n        batch_size = len(t_img)\n\n        input_img = torch.FloatTensor(batch_size, 3, image_size, image_size)\n        domain_label = torch.ones(batch_size)\n        domain_label = domain_label.long()\n\n        if cuda:\n            t_img = t_img.cuda()\n            input_img = input_img.cuda()\n            domain_label = domain_label.cuda()\n\n        input_img.resize_as_(t_img).copy_(t_img)\n\n        _, domain_output = my_net(input_data=input_img, alpha=alpha)\n        err_t_domain = loss_domain(domain_output, domain_label)\n        err = err_t_domain + err_s_domain + err_s_label\n        err.backward()\n        optimizer.step()\n\n        # Accumulate the losses\n        total_err_s_label += err_s_label.item() # Convert tensor to Python number and accumulate\n        total_err_s_domain += err_s_domain.item()\n        total_err_t_domain += err_t_domain.item()\n        \n        # Calculate accuracy for source data\n        pred = class_output.data.max(1, keepdim=True)[1]\n        total_correct += pred.eq(class_label.data.view_as(pred)).cpu().sum().item()\n        total_samples += batch_size\n        \n        i += 1\n\n    # Calculate the average losses\n    avg_err_s_label = total_err_s_label / len_dataloader\n    avg_err_s_domain = total_err_s_domain / len_dataloader\n    avg_err_t_domain = total_err_t_domain / len_dataloader\n    avg_accuracy = total_correct / total_samples\n\n    # Append to lists for graph\n    train_losses_s_label.append(avg_err_s_label)\n    train_losses_s_domain.append(avg_err_s_domain)\n    train_losses_t_domain.append(avg_err_t_domain)\n    train_accs.append(avg_accuracy)\n    \n    # Print training metrics\n    print('\\nepoch: ', epoch)\n    print('\\tTrain:')\n    print('\\t\\terr_s_label: %f, err_s_domain: %f, err_t_domain: %f, accuracy: %f' %\n          (avg_err_s_label, avg_err_s_domain, avg_err_t_domain, avg_accuracy))\n    \n\n    torch.save(my_net, '{0}/mnist_mnistm_model_epoch_{1}.pth'.format(model_root, epoch))\n   \n    test_loss_source, test_acc_source = test(source_dataset_name, epoch)\n    test_loss_target, test_acc_target = test(target_dataset_name, epoch)\n\n    # Append test metrics\n    test_losses_source.append(test_loss_source)\n    test_accs_source.append(test_acc_source)\n    \n    test_losses_target.append(test_loss_target)\n    test_accs_target.append(test_acc_target)\n    \n    # Print test metrics\n    print('\\tTest:')\n    print('\\t\\tSource dataset -  loss: %f, accuracy: %f' % (test_loss_source, test_acc_source))\n    print('\\t\\tTarget dataset -  loss: %f, accuracy: %f' % (test_loss_target, test_acc_target))\n\n    \n    \nprint('TRAINING COMPLETED')","metadata":{"execution":{"iopub.status.busy":"2024-06-30T12:37:30.401469Z","iopub.execute_input":"2024-06-30T12:37:30.402161Z"},"trusted":true},"execution_count":null,"outputs":[{"name":"stdout","text":"TRAINING STARTED...\n\nepoch:  0\n\tTrain:\n\t\terr_s_label: 0.086877, err_s_domain: 0.210408, err_t_domain: 0.209944, accuracy: 0.973407\n\tTest:\n\t\tSource dataset -  loss: 0.074843, accuracy: 0.976700\n\t\tTarget dataset -  loss: 1.866690, accuracy: 0.507444\n\nepoch:  1\n\tTrain:\n\t\terr_s_label: 0.063051, err_s_domain: 0.083058, err_t_domain: 0.081759, accuracy: 0.981678\n\tTest:\n\t\tSource dataset -  loss: 0.073483, accuracy: 0.976100\n\t\tTarget dataset -  loss: 1.963903, accuracy: 0.518778\n\nepoch:  2\n\tTrain:\n\t\terr_s_label: 0.076166, err_s_domain: 0.230966, err_t_domain: 0.232160, accuracy: 0.976475\n\tTest:\n\t\tSource dataset -  loss: 0.134193, accuracy: 0.956800\n\t\tTarget dataset -  loss: 1.439976, accuracy: 0.584667\n\nepoch:  3\n\tTrain:\n\t\terr_s_label: 0.100680, err_s_domain: 0.467294, err_t_domain: 0.470938, accuracy: 0.968881\n\tTest:\n\t\tSource dataset -  loss: 0.242927, accuracy: 0.917000\n\t\tTarget dataset -  loss: 1.781265, accuracy: 0.550000\n\nepoch:  4\n\tTrain:\n\t\terr_s_label: 0.112314, err_s_domain: 0.545892, err_t_domain: 0.546497, accuracy: 0.965254\n\tTest:\n\t\tSource dataset -  loss: 0.091290, accuracy: 0.970400\n\t\tTarget dataset -  loss: 1.535216, accuracy: 0.595889\n\nepoch:  5\n\tTrain:\n\t\terr_s_label: 0.122560, err_s_domain: 0.572194, err_t_domain: 0.572734, accuracy: 0.961220\n\tTest:\n\t\tSource dataset -  loss: 0.167432, accuracy: 0.944500\n\t\tTarget dataset -  loss: 2.048140, accuracy: 0.519333\n\nepoch:  6\n\tTrain:\n\t\terr_s_label: 0.123082, err_s_domain: 0.571637, err_t_domain: 0.575149, accuracy: 0.962525\n\tTest:\n\t\tSource dataset -  loss: 0.118226, accuracy: 0.963000\n\t\tTarget dataset -  loss: 1.853187, accuracy: 0.517778\n\nepoch:  7\n\tTrain:\n\t\terr_s_label: 0.128003, err_s_domain: 0.595650, err_t_domain: 0.597859, accuracy: 0.960068\n\tTest:\n\t\tSource dataset -  loss: 0.200304, accuracy: 0.934000\n\t\tTarget dataset -  loss: 2.838201, accuracy: 0.477222\n\nepoch:  8\n\tTrain:\n\t\terr_s_label: 0.120636, err_s_domain: 0.595762, err_t_domain: 0.598050, accuracy: 0.962966\n\tTest:\n\t\tSource dataset -  loss: 0.526787, accuracy: 0.815900\n\t\tTarget dataset -  loss: 1.563870, accuracy: 0.563889\n\nepoch:  9\n\tTrain:\n\t\terr_s_label: 0.134461, err_s_domain: 0.617838, err_t_domain: 0.617090, accuracy: 0.957898\n\tTest:\n\t\tSource dataset -  loss: 0.243276, accuracy: 0.917900\n\t\tTarget dataset -  loss: 1.558866, accuracy: 0.600333\n\nepoch:  10\n\tTrain:\n\t\terr_s_label: 0.122980, err_s_domain: 0.592486, err_t_domain: 0.596196, accuracy: 0.961271\n\tTest:\n\t\tSource dataset -  loss: 0.220160, accuracy: 0.931500\n\t\tTarget dataset -  loss: 3.110385, accuracy: 0.483222\n\nepoch:  11\n\tTrain:\n\t\terr_s_label: 0.131721, err_s_domain: 0.593652, err_t_domain: 0.596738, accuracy: 0.958814\n\tTest:\n\t\tSource dataset -  loss: 0.101384, accuracy: 0.965500\n\t\tTarget dataset -  loss: 1.734855, accuracy: 0.559000\n\nepoch:  12\n\tTrain:\n\t\terr_s_label: 0.138902, err_s_domain: 0.597977, err_t_domain: 0.601059, accuracy: 0.957000\n\tTest:\n\t\tSource dataset -  loss: 0.224236, accuracy: 0.924800\n\t\tTarget dataset -  loss: 1.172415, accuracy: 0.642333\n\nepoch:  13\n\tTrain:\n\t\terr_s_label: 0.141132, err_s_domain: 0.624632, err_t_domain: 0.629948, accuracy: 0.956475\n\tTest:\n\t\tSource dataset -  loss: 0.100238, accuracy: 0.967400\n\t\tTarget dataset -  loss: 2.324619, accuracy: 0.487444\n\nepoch:  14\n\tTrain:\n\t\terr_s_label: 0.140477, err_s_domain: 0.595991, err_t_domain: 0.596929, accuracy: 0.957136\n\tTest:\n\t\tSource dataset -  loss: 0.151945, accuracy: 0.953800\n\t\tTarget dataset -  loss: 2.570111, accuracy: 0.462889\n\nepoch:  15\n\tTrain:\n\t\terr_s_label: 0.139889, err_s_domain: 0.603072, err_t_domain: 0.605880, accuracy: 0.956847\n\tTest:\n\t\tSource dataset -  loss: 0.084019, accuracy: 0.972700\n\t\tTarget dataset -  loss: 2.160632, accuracy: 0.482000\n\nepoch:  16\n\tTrain:\n\t\terr_s_label: 0.138085, err_s_domain: 0.607134, err_t_domain: 0.612730, accuracy: 0.957237\n\tTest:\n\t\tSource dataset -  loss: 0.222737, accuracy: 0.928100\n\t\tTarget dataset -  loss: 2.421168, accuracy: 0.500667\n\nepoch:  17\n\tTrain:\n\t\terr_s_label: 0.134364, err_s_domain: 0.619352, err_t_domain: 0.619510, accuracy: 0.957881\n\tTest:\n\t\tSource dataset -  loss: 0.102283, accuracy: 0.966400\n\t\tTarget dataset -  loss: 1.845118, accuracy: 0.559778\n\nepoch:  18\n\tTrain:\n\t\terr_s_label: 0.145149, err_s_domain: 0.613631, err_t_domain: 0.612228, accuracy: 0.954797\n\tTest:\n\t\tSource dataset -  loss: 0.158712, accuracy: 0.947300\n\t\tTarget dataset -  loss: 2.295780, accuracy: 0.536111\n\nepoch:  19\n\tTrain:\n\t\terr_s_label: 0.137754, err_s_domain: 0.621650, err_t_domain: 0.624220, accuracy: 0.957051\n\tTest:\n\t\tSource dataset -  loss: 0.116672, accuracy: 0.962700\n\t\tTarget dataset -  loss: 1.475330, accuracy: 0.595000\n\nepoch:  20\n\tTrain:\n\t\terr_s_label: 0.143682, err_s_domain: 0.617693, err_t_domain: 0.621535, accuracy: 0.956051\n\tTest:\n\t\tSource dataset -  loss: 0.107570, accuracy: 0.962000\n\t\tTarget dataset -  loss: 2.287456, accuracy: 0.486667\n\nepoch:  21\n\tTrain:\n\t\terr_s_label: 0.138057, err_s_domain: 0.611838, err_t_domain: 0.612811, accuracy: 0.956627\n\tTest:\n\t\tSource dataset -  loss: 0.124750, accuracy: 0.960200\n\t\tTarget dataset -  loss: 2.639783, accuracy: 0.508556\n\nepoch:  22\n\tTrain:\n\t\terr_s_label: 0.138683, err_s_domain: 0.611611, err_t_domain: 0.614613, accuracy: 0.956203\n\tTest:\n\t\tSource dataset -  loss: 0.225420, accuracy: 0.924800\n\t\tTarget dataset -  loss: 1.298982, accuracy: 0.651111\n\nepoch:  23\n\tTrain:\n\t\terr_s_label: 0.137220, err_s_domain: 0.611072, err_t_domain: 0.614519, accuracy: 0.956678\n\tTest:\n\t\tSource dataset -  loss: 0.111579, accuracy: 0.965000\n\t\tTarget dataset -  loss: 1.400007, accuracy: 0.617667\n\nepoch:  24\n\tTrain:\n\t\terr_s_label: 0.139255, err_s_domain: 0.627729, err_t_domain: 0.631926, accuracy: 0.956288\n\tTest:\n\t\tSource dataset -  loss: 0.308936, accuracy: 0.899400\n\t\tTarget dataset -  loss: 1.754354, accuracy: 0.615000\n\nepoch:  25\n\tTrain:\n\t\terr_s_label: 0.141716, err_s_domain: 0.628570, err_t_domain: 0.630838, accuracy: 0.956169\n\tTest:\n\t\tSource dataset -  loss: 0.196335, accuracy: 0.929300\n\t\tTarget dataset -  loss: 2.414310, accuracy: 0.514111\n\nepoch:  26\n\tTrain:\n\t\terr_s_label: 0.134083, err_s_domain: 0.614560, err_t_domain: 0.616796, accuracy: 0.958034\n\tTest:\n\t\tSource dataset -  loss: 0.097780, accuracy: 0.967500\n\t\tTarget dataset -  loss: 1.990059, accuracy: 0.541778\n\nepoch:  27\n\tTrain:\n\t\terr_s_label: 0.139891, err_s_domain: 0.619617, err_t_domain: 0.621939, accuracy: 0.956542\n\tTest:\n\t\tSource dataset -  loss: 0.218771, accuracy: 0.928300\n\t\tTarget dataset -  loss: 1.534022, accuracy: 0.599111\n\nepoch:  28\n\tTrain:\n\t\terr_s_label: 0.136866, err_s_domain: 0.628120, err_t_domain: 0.630399, accuracy: 0.957186\n\tTest:\n\t\tSource dataset -  loss: 0.087446, accuracy: 0.973200\n\t\tTarget dataset -  loss: 1.967471, accuracy: 0.542444\n\nepoch:  29\n\tTrain:\n\t\terr_s_label: 0.142148, err_s_domain: 0.640543, err_t_domain: 0.639205, accuracy: 0.955186\n\tTest:\n\t\tSource dataset -  loss: 0.132425, accuracy: 0.958900\n\t\tTarget dataset -  loss: 1.343550, accuracy: 0.660000\n\nepoch:  30\n\tTrain:\n\t\terr_s_label: 0.136398, err_s_domain: 0.617044, err_t_domain: 0.619480, accuracy: 0.957746\n\tTest:\n\t\tSource dataset -  loss: 0.119085, accuracy: 0.961800\n\t\tTarget dataset -  loss: 2.186523, accuracy: 0.501111\n\nepoch:  31\n\tTrain:\n\t\terr_s_label: 0.137468, err_s_domain: 0.630769, err_t_domain: 0.634392, accuracy: 0.957593\n\tTest:\n\t\tSource dataset -  loss: 0.136623, accuracy: 0.959900\n\t\tTarget dataset -  loss: 1.993378, accuracy: 0.537333\n\nepoch:  32\n\tTrain:\n\t\terr_s_label: 0.129236, err_s_domain: 0.619456, err_t_domain: 0.622676, accuracy: 0.959271\n\tTest:\n\t\tSource dataset -  loss: 0.158002, accuracy: 0.949600\n\t\tTarget dataset -  loss: 1.718042, accuracy: 0.607333\n\nepoch:  33\n\tTrain:\n\t\terr_s_label: 0.135881, err_s_domain: 0.627558, err_t_domain: 0.627696, accuracy: 0.957525\n\tTest:\n\t\tSource dataset -  loss: 0.189014, accuracy: 0.938400\n\t\tTarget dataset -  loss: 2.756448, accuracy: 0.509667\n\nepoch:  34\n\tTrain:\n\t\terr_s_label: 0.133708, err_s_domain: 0.640896, err_t_domain: 0.650179, accuracy: 0.958136\n\tTest:\n\t\tSource dataset -  loss: 0.081830, accuracy: 0.974100\n\t\tTarget dataset -  loss: 1.532030, accuracy: 0.603000\n\nepoch:  35\n\tTrain:\n\t\terr_s_label: 0.123562, err_s_domain: 0.632985, err_t_domain: 0.634117, accuracy: 0.961492\n\tTest:\n\t\tSource dataset -  loss: 0.209144, accuracy: 0.928300\n\t\tTarget dataset -  loss: 2.099328, accuracy: 0.560778\n\nepoch:  36\n\tTrain:\n\t\terr_s_label: 0.129775, err_s_domain: 0.636767, err_t_domain: 0.638843, accuracy: 0.960237\n\tTest:\n\t\tSource dataset -  loss: 0.192805, accuracy: 0.934100\n\t\tTarget dataset -  loss: 3.306147, accuracy: 0.427000\n\nepoch:  37\n\tTrain:\n\t\terr_s_label: 0.124600, err_s_domain: 0.641135, err_t_domain: 0.642955, accuracy: 0.962051\n\tTest:\n\t\tSource dataset -  loss: 0.103999, accuracy: 0.967700\n\t\tTarget dataset -  loss: 1.427702, accuracy: 0.646667\n\nepoch:  38\n\tTrain:\n\t\terr_s_label: 0.121335, err_s_domain: 0.634347, err_t_domain: 0.634711, accuracy: 0.960898\n\tTest:\n\t\tSource dataset -  loss: 0.080331, accuracy: 0.976100\n\t\tTarget dataset -  loss: 1.072814, accuracy: 0.701222\n\nepoch:  39\n\tTrain:\n\t\terr_s_label: 0.122628, err_s_domain: 0.633230, err_t_domain: 0.640586, accuracy: 0.962220\n\tTest:\n\t\tSource dataset -  loss: 0.287758, accuracy: 0.898900\n\t\tTarget dataset -  loss: 2.890434, accuracy: 0.510667\n\nepoch:  40\n\tTrain:\n\t\terr_s_label: 0.119563, err_s_domain: 0.634928, err_t_domain: 0.639672, accuracy: 0.962508\n\tTest:\n\t\tSource dataset -  loss: 0.089770, accuracy: 0.971300\n\t\tTarget dataset -  loss: 1.278668, accuracy: 0.640444\n\nepoch:  41\n\tTrain:\n\t\terr_s_label: 0.117426, err_s_domain: 0.620397, err_t_domain: 0.622730, accuracy: 0.963678\n\tTest:\n\t\tSource dataset -  loss: 0.124214, accuracy: 0.965400\n\t\tTarget dataset -  loss: 1.404345, accuracy: 0.642778\n\nepoch:  42\n\tTrain:\n\t\terr_s_label: 0.120291, err_s_domain: 0.635449, err_t_domain: 0.637243, accuracy: 0.962356\n\tTest:\n\t\tSource dataset -  loss: 0.080328, accuracy: 0.975900\n\t\tTarget dataset -  loss: 1.299477, accuracy: 0.656667\n\nepoch:  43\n\tTrain:\n\t\terr_s_label: 0.125989, err_s_domain: 0.647202, err_t_domain: 0.651395, accuracy: 0.960492\n\tTest:\n\t\tSource dataset -  loss: 0.133004, accuracy: 0.960700\n\t\tTarget dataset -  loss: 1.561522, accuracy: 0.612444\n\nepoch:  44\n\tTrain:\n\t\terr_s_label: 0.113217, err_s_domain: 0.621855, err_t_domain: 0.626081, accuracy: 0.965780\n\tTest:\n\t\tSource dataset -  loss: 0.085440, accuracy: 0.974400\n\t\tTarget dataset -  loss: 1.939975, accuracy: 0.600333\n\nepoch:  45\n\tTrain:\n\t\terr_s_label: 0.121924, err_s_domain: 0.638312, err_t_domain: 0.639899, accuracy: 0.962661\n\tTest:\n\t\tSource dataset -  loss: 0.067795, accuracy: 0.977800\n\t\tTarget dataset -  loss: 1.721235, accuracy: 0.577111\n\nepoch:  46\n\tTrain:\n\t\terr_s_label: 0.116332, err_s_domain: 0.639893, err_t_domain: 0.641112, accuracy: 0.963780\n\tTest:\n\t\tSource dataset -  loss: 0.065312, accuracy: 0.980100\n\t\tTarget dataset -  loss: 1.344541, accuracy: 0.643444\n\nepoch:  47\n\tTrain:\n\t\terr_s_label: 0.111741, err_s_domain: 0.634903, err_t_domain: 0.639514, accuracy: 0.964966\n\tTest:\n\t\tSource dataset -  loss: 0.082641, accuracy: 0.975100\n\t\tTarget dataset -  loss: 2.038710, accuracy: 0.584333\n\nepoch:  48\n\tTrain:\n\t\terr_s_label: 0.116220, err_s_domain: 0.643103, err_t_domain: 0.649663, accuracy: 0.963797\n\tTest:\n\t\tSource dataset -  loss: 0.101640, accuracy: 0.968500\n\t\tTarget dataset -  loss: 2.463838, accuracy: 0.497444\n\nepoch:  49\n\tTrain:\n\t\terr_s_label: 0.112521, err_s_domain: 0.644240, err_t_domain: 0.642936, accuracy: 0.966068\n\tTest:\n\t\tSource dataset -  loss: 0.067227, accuracy: 0.977700\n\t\tTarget dataset -  loss: 1.391317, accuracy: 0.641111\n\nepoch:  50\n\tTrain:\n\t\terr_s_label: 0.110894, err_s_domain: 0.635261, err_t_domain: 0.639847, accuracy: 0.965881\n\tTest:\n\t\tSource dataset -  loss: 0.081477, accuracy: 0.973400\n\t\tTarget dataset -  loss: 3.056565, accuracy: 0.450778\n\nepoch:  51\n\tTrain:\n\t\terr_s_label: 0.111095, err_s_domain: 0.635929, err_t_domain: 0.642097, accuracy: 0.964932\n\tTest:\n\t\tSource dataset -  loss: 0.062212, accuracy: 0.979800\n\t\tTarget dataset -  loss: 1.622648, accuracy: 0.605000\n\nepoch:  52\n\tTrain:\n\t\terr_s_label: 0.104889, err_s_domain: 0.643027, err_t_domain: 0.646017, accuracy: 0.966881\n\tTest:\n\t\tSource dataset -  loss: 0.102649, accuracy: 0.968900\n\t\tTarget dataset -  loss: 1.019078, accuracy: 0.728333\n\nepoch:  53\n\tTrain:\n\t\terr_s_label: 0.112387, err_s_domain: 0.642838, err_t_domain: 0.647174, accuracy: 0.965763\n\tTest:\n\t\tSource dataset -  loss: 0.120489, accuracy: 0.960500\n\t\tTarget dataset -  loss: 1.471778, accuracy: 0.618111\n\nepoch:  54\n\tTrain:\n\t\terr_s_label: 0.113895, err_s_domain: 0.627779, err_t_domain: 0.629936, accuracy: 0.964237\n\tTest:\n\t\tSource dataset -  loss: 0.086136, accuracy: 0.971700\n\t\tTarget dataset -  loss: 2.382598, accuracy: 0.522222\n\nepoch:  55\n\tTrain:\n\t\terr_s_label: 0.117919, err_s_domain: 0.631230, err_t_domain: 0.634223, accuracy: 0.963085\n\tTest:\n\t\tSource dataset -  loss: 0.051293, accuracy: 0.983000\n\t\tTarget dataset -  loss: 1.547361, accuracy: 0.636444\n\nepoch:  56\n\tTrain:\n\t\terr_s_label: 0.113910, err_s_domain: 0.643941, err_t_domain: 0.651277, accuracy: 0.964288\n\tTest:\n\t\tSource dataset -  loss: 0.082622, accuracy: 0.974400\n\t\tTarget dataset -  loss: 1.640873, accuracy: 0.633222\n\nepoch:  57\n\tTrain:\n\t\terr_s_label: 0.110293, err_s_domain: 0.639990, err_t_domain: 0.638198, accuracy: 0.966322\n\tTest:\n\t\tSource dataset -  loss: 0.184980, accuracy: 0.943800\n\t\tTarget dataset -  loss: 1.813683, accuracy: 0.619000\n\nepoch:  58\n\tTrain:\n\t\terr_s_label: 0.119172, err_s_domain: 0.644630, err_t_domain: 0.648556, accuracy: 0.963153\n\tTest:\n\t\tSource dataset -  loss: 0.057421, accuracy: 0.982300\n\t\tTarget dataset -  loss: 1.785625, accuracy: 0.595889\n\nepoch:  59\n\tTrain:\n\t\terr_s_label: 0.111303, err_s_domain: 0.640467, err_t_domain: 0.644868, accuracy: 0.965797\n\tTest:\n\t\tSource dataset -  loss: 0.072714, accuracy: 0.977100\n\t\tTarget dataset -  loss: 1.404419, accuracy: 0.672222\n\nepoch:  60\n\tTrain:\n\t\terr_s_label: 0.109126, err_s_domain: 0.645453, err_t_domain: 0.650527, accuracy: 0.965847\n\tTest:\n\t\tSource dataset -  loss: 0.075284, accuracy: 0.977000\n\t\tTarget dataset -  loss: 2.202504, accuracy: 0.555333\n\nepoch:  61\n\tTrain:\n\t\terr_s_label: 0.109593, err_s_domain: 0.642466, err_t_domain: 0.641812, accuracy: 0.966288\n\tTest:\n\t\tSource dataset -  loss: 0.157443, accuracy: 0.952400\n\t\tTarget dataset -  loss: 2.446189, accuracy: 0.531333\n\nepoch:  62\n\tTrain:\n\t\terr_s_label: 0.101944, err_s_domain: 0.649881, err_t_domain: 0.653858, accuracy: 0.967576\n\tTest:\n\t\tSource dataset -  loss: 0.069510, accuracy: 0.978700\n\t\tTarget dataset -  loss: 2.024988, accuracy: 0.603889\n\nepoch:  63\n\tTrain:\n\t\terr_s_label: 0.104756, err_s_domain: 0.649118, err_t_domain: 0.648536, accuracy: 0.966915\n\tTest:\n\t\tSource dataset -  loss: 0.203595, accuracy: 0.926800\n\t\tTarget dataset -  loss: 1.382034, accuracy: 0.688222\n\nepoch:  64\n\tTrain:\n\t\terr_s_label: 0.103634, err_s_domain: 0.645137, err_t_domain: 0.648760, accuracy: 0.968390\n\tTest:\n\t\tSource dataset -  loss: 0.069614, accuracy: 0.978600\n\t\tTarget dataset -  loss: 2.717280, accuracy: 0.469000\n\nepoch:  65\n\tTrain:\n\t\terr_s_label: 0.111491, err_s_domain: 0.643251, err_t_domain: 0.646833, accuracy: 0.965305\n\tTest:\n\t\tSource dataset -  loss: 0.093441, accuracy: 0.972000\n\t\tTarget dataset -  loss: 1.599906, accuracy: 0.679444\n\nepoch:  66\n\tTrain:\n\t\terr_s_label: 0.101057, err_s_domain: 0.637161, err_t_domain: 0.641017, accuracy: 0.968627\n\tTest:\n\t\tSource dataset -  loss: 0.068584, accuracy: 0.978600\n\t\tTarget dataset -  loss: 1.253318, accuracy: 0.725778\n\nepoch:  67\n\tTrain:\n\t\terr_s_label: 0.106681, err_s_domain: 0.640473, err_t_domain: 0.641733, accuracy: 0.966695\n\tTest:\n\t\tSource dataset -  loss: 0.070955, accuracy: 0.978000\n\t\tTarget dataset -  loss: 1.111766, accuracy: 0.692444\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Graphs","metadata":{}},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n\n# Plotting training and test losses\nplt.figure(figsize=(12, 5))\n\n# Plot training losses\nplt.subplot(1, 2, 1)\nplt.plot(train_losses_s_label, label='Source Label Loss')\nplt.plot(train_losses_s_domain, label='Source Domain Loss')\nplt.plot(train_losses_t_domain, label='Target Domain Loss')\nplt.xlabel('Epoch')\nplt.ylabel('Loss')\nplt.title('Training Losses')\nplt.legend()\n\n# Plot test losses\nplt.subplot(1, 2, 2)\nplt.plot(test_losses_source, label='Source Test Loss')\nplt.plot(test_losses_target, label='Target Test Loss')\nplt.xlabel('Epoch')\nplt.ylabel('Loss')\nplt.title('Test Losses')\nplt.legend()\n\nplt.tight_layout()\nplt.show()\n\n# Plotting training and test accuracies\nplt.figure(figsize=(12, 5))\n\n# Plot training accuracy\nplt.subplot(1, 2, 1)\nplt.plot(train_accs, label='Training Accuracy')\nplt.xlabel('Epoch')\nplt.ylabel('Accuracy')\nplt.title('Training Accuracy')\nplt.legend()\n\n# Plot test accuracy\nplt.subplot(1, 2, 2)\nplt.plot(test_accs_source, label='Source Test Accuracy')\nplt.plot(test_accs_target, label='Target Test Accuracy')\nplt.xlabel('Epoch')\nplt.ylabel('Accuracy')\nplt.title('Test Accuracy')\nplt.legend()\n\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-30T12:36:12.769579Z","iopub.execute_input":"2024-06-30T12:36:12.770010Z","iopub.status.idle":"2024-06-30T12:36:13.956503Z","shell.execute_reply.started":"2024-06-30T12:36:12.769968Z","shell.execute_reply":"2024-06-30T12:36:13.955534Z"},"trusted":true},"execution_count":35,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x500 with 2 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x500 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{"execution":{"iopub.status.busy":"2024-06-30T11:55:09.377156Z","iopub.execute_input":"2024-06-30T11:55:09.378000Z","iopub.status.idle":"2024-06-30T11:55:09.382190Z","shell.execute_reply.started":"2024-06-30T11:55:09.377969Z","shell.execute_reply":"2024-06-30T11:55:09.381366Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"Hello\n\t\tHello\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}